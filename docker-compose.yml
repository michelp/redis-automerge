services:
  redis:
    build: .
    ports:
      - "6379:6379"
    restart: unless-stopped

  webdis:
    image: nicolas/webdis:latest
    depends_on:
      - redis
    # Port 7379 only exposed internally - accessed via nginx proxy at /api
    expose:
      - "7379"
    environment:
      REDIS_HOST: redis
    volumes:
      - ./webdis.json:/etc/webdis.prod.json:ro
    restart: unless-stopped

  auth:
    build: ./auth-service
    depends_on:
      - redis
    # Port 3000 only exposed internally - accessed via nginx proxy at /auth
    expose:
      - "3000"
    environment:
      REDIS_URL: redis://redis:6379
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GITHUB_CALLBACK_URL: ${GITHUB_CALLBACK_URL:-http://localhost:8080/auth/github/callback}
      SESSION_SECRET: ${SESSION_SECRET}
      NODE_ENV: ${NODE_ENV:-development}
    restart: unless-stopped

  postgres:
    image: postgres:18-alpine
    environment:
      POSTGRES_DB: automerge
      POSTGRES_USER: automerge
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-automerge_dev_password}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U automerge"]
      interval: 5s
      timeout: 5s
      retries: 5

  worker:
    build: ./worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: automerge
      POSTGRES_USER: automerge
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-automerge_dev_password}
    restart: unless-stopped

  demo:
    image: nginx:alpine
    depends_on:
      - redis
      - webdis
      - auth
    ports:
      - "8080:80"
    volumes:
      - ./demo:/usr/share/nginx/html:ro
      - ./demo/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

  test:
    image: redis:7
    depends_on:
      - redis
      - webdis
    volumes:
      - .:/workspace
    working_dir: /workspace
    entrypoint: ["bash", "scripts/test-module.sh"]
    environment:
      REDIS_HOST: redis
      WEBDIS_HOST: webdis
      WEBDIS_PORT: 7379

volumes:
  postgres_data:
