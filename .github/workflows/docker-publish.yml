name: Build and Publish Docker Image

# Workflow behavior:
# - Push to main/master: Build and test only (no Docker Hub push)
# - Version tags (v*.*.*): Build, test, and push to Docker Hub
# - Pull requests: Build and test only (no Docker Hub push)

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - master

env:
  IMAGE_NAME: metagration/redis-automerge

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # For version tags (v1.2.3), generate multiple tags
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # Tag latest for version releases
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run integration tests
        run: |
          # Use docker compose to run tests with the freshly built image
          docker compose run --rm test
          docker compose down

      - name: Push Docker image to Docker Hub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Display pushed tags
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "Successfully pushed the following tags:"
          echo "${{ steps.meta.outputs.tags }}"

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          body: |
            ## Docker Images

            This release is available on Docker Hub:

            ```bash
            docker pull metagration/redis-automerge:${{ steps.meta.outputs.version }}
            docker pull metagration/redis-automerge:latest
            ```

            ### Available Tags
            ${{ steps.meta.outputs.tags }}

            ### Quick Start

            ```bash
            # Run Redis with the module
            docker run -d -p 6379:6379 metagration/redis-automerge:${{ steps.meta.outputs.version }}

            # Test it works
            redis-cli AM.NEW mydoc
            redis-cli AM.PUTTEXT mydoc greeting "Hello, Automerge!"
            redis-cli AM.GETTEXT mydoc greeting
            ```

            ### Full Documentation

            See the [README](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/README.md) for complete documentation.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
